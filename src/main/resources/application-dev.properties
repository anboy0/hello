#修改tomcat端口号
server.port=8081
#设置日志配置
logging.config=classpath:log4j2.xml
#添加设置banner
spring.banner.location=banner.txt
#设置jasypt加密的秘钥,最好在启动参数中配置
#jasypt.encryptor.password=jasypt
#druid datasouce database settings begin
spring.datasource.druid.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.druid.url=jdbc:mysql://localhost:3306/hello?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=GMT%2B8
spring.datasource.druid.username=root
#spring.datasource.druid.password=123456
spring.datasource.druid.password=aiYmLx9KTA2/JKaJnUJ0BwufZidRYSfLV2ALSA3MW0QSSHM/xW4fiGiSrg0a/1NUYYra4KE+4Sqcc1PFTgxT+w==
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#连接池的设置
#初始化时建立物理连接的个数
spring.datasource.druid.initial-size=5
#最小连接池数量
spring.datasource.druid.min-idle=5
#最大连接池数量 maxIdle已经不再使用
spring.datasource.druid.max-active=20
#获取连接时最大等待时间，单位毫秒
spring.datasource.druid.max-wait=60000
#申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.druid.test-while-idle=true
#既作为检测的间隔时间又作为testWhileIdel执行的依据
spring.datasource.druid.time-between-eviction-runs-millis=60000
#销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接
spring.datasource.druid.min-evictable-idle-time-millis=30000
#用来检测连接是否有效的sql 必须是一个查询语句
#mysql中为 select 'x'
#oracle中为 select 1 from dual
spring.datasource.druid.validation-query=select 'x'
#申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
spring.datasource.druid.test-on-borrow=false
#归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
spring.datasource.druid.test-on-return=false
#当数据库抛出不可恢复的异常时,抛弃该连接
#spring.datasource.druid.exception-sorter=true
#spring.datasource.druid.exception-sorter-class-name=com.alibaba.druid.pool.vendor.MySqlExceptionSorter
#是否缓存preparedStatement,mysql5.5+建议开启
spring.datasource.druid.pool-prepared-statements=true
#当值大于0时poolPreparedStatements会自动修改为true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
###配置扩展插件
#spring.datasource.druid.filters=stat,wall
spring.datasource.druid.filter.wall.enabled=true
spring.datasource.druid.filter.stat.enabled=true
spring.datasource.druid.filter.config.enabled=true
###通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500;config.decrypt=true;config.decrypt.key=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJ+RkNBqTt3axXlAR1P0pmiAjO3sVbaGc4pJp7s9DGbYwPUqz/VJ/7pZeX991dqswEhMATJENgQl2soUEYsPfs0CAwEAAQ==
spring.datasource.druid.filter.stat.log-slow-sql=true
###合并多个DruidDataSource的监控数据
spring.datasource.druid.use-global-data-source-stat=true
##设置访问druid监控页的账号和密码,默认没有
spring.datasource.druid.stat-view-servlet.login-username=admin
spring.datasource.druid.stat-view-servlet.login-password=123456
# 配置日志输出
spring.datasource.druid.filter.slf4j.enabled=true
#mongodb相关参数
#spring.data.mongodb.host=127.0.0.1
#spring.data.mongodb.database=mymongodb
#spring.data.mongodb.port=27017
## Redis数据库索引（默认为0）
#spring.redis.database=0
## Redis服务器地址
#spring.redis.host=127.0.0.1
## Redis服务器连接端口
#spring.redis.port=6379
## Redis服务器连接密码（默认为空）
#spring.redis.password=
## 连接池最大连接数（使用负值表示没有限制）
#spring.redis.jedis.max-active=200
## 连接池最大阻塞等待时间（使用负值表示没有限制）
#spring.redis.jedis.max-wait=-1
## 连接池中的最大空闲连接
#spring.redis.jedis.max-idle=10
## 连接池中的最小空闲连接
#spring.redis.jedis.min-idle=0
## 连接超时时间（毫秒）
#spring.redis.jedis.timeout=1000












